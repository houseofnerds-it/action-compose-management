name: "Reuseable Workflow - This detects changes in a repo on commits or PRs."

on:
  workflow_call:
    outputs:
      changed_files_added:
        value: ${{ jobs.check_changed_files.outputs.changed_files_added }}
      changed_files_modified:
        value: ${{ jobs.check_changed_files.outputs.changed_files_modified }}
      changed_files_removed:
        value: ${{ jobs.check_changed_files.outputs.changed_files_removed }}
      changed_files_renamed:
        value: ${{ jobs.check_changed_files.outputs.changed_files_renamed }}
      changed_files_all_csv:
        value: ${{ jobs.check_changed_files.outputs.changed_files_all_csv }}
      hosts_added:
        value: ${{ jobs.check_changed_files.outputs.hosts_added }}
      hosts_modified:
        value: ${{ jobs.check_changed_files.outputs.hosts_modified }}
      hosts_removed:
        value: ${{ jobs.check_changed_files.outputs.hosts_removed }}
      hosts_renamed:
        value: ${{ jobs.check_changed_files.outputs.hosts_renamed }}
      unique_hosts:
        value: ${{ jobs.check_changed_files.outputs.unique_hosts }}
      unique_hosts_short:
        value: ${{ jobs.check_changed_files.outputs.unique_hosts_short }}
      matrix_hosts:
        value: ${{ jobs.check_changed_files.outputs.matrix_hosts }}

jobs:
  check_changed_files:
    runs-on: ubuntu-latest
    name: detect which files where changed and type of change
    outputs:
      changed_files_added: "${{ steps.changed-files.outputs.added }}"
      changed_files_modified: "${{ steps.changed-files.outputs.modified }}"
      changed_files_removed: "${{ steps.changed-files.outputs.removed }}"
      changed_files_renamed: "${{ steps.changed-files.outputs.renamed }}"
      changed_files_all_csv: "${{ steps.changed-files-csv.outputs.all }}"
      hosts_added: "${{ steps.detect-hostfolder.outputs.hosts-added }}"
      hosts_modified: "${{ steps.detect-hostfolder.outputs.hosts_modified }}"
      hosts_removed: "${{ steps.detect-hostfolder.outputs.hosts_removed }}"
      hosts_renamed: "${{ steps.detect-hostfolder.outputs.hosts_renamed }}"
      unique_hosts: "${{ steps.matrix-variables.outputs.unique_hosts }}"
      unique_hosts_short: "${{ steps.matrix-variables.outputs.unique_hosts_short }}"
      matrix_hosts: "${{ steps.matrix-variables.outputs.matrix_hosts }}"
    steps:
      - uses: actions/checkout@v4
      - uses: ruslandulina/compare-basehead-commits@v1
        id: changed-files
        with:
          format: 'space-delimited'
      - uses: ruslandulina/compare-basehead-commits@v1
        id: changed-files-csv
        with:
          format: 'csv'
      
      - name: "Get host folder of added|modified|removed|renamed files"
        id: detect-hostfolder
        run: |
          for file in ${{ steps.changed-files.outputs.added }}
          do
            hosts_added="$hosts_added $(echo "$file" | cut -d "/" -f1)"
          done

          for file in ${{ steps.changed-files.outputs.modified }}
          do
            hosts_modified="$hosts_modified $(echo "$file" | cut -d "/" -f1)"
          done
          
          for file in ${{ steps.changed-files.outputs.removed }}
          do
            hosts_removed="$hosts_removed $(echo "$file" | cut -d "/" -f1)"
          done
          
          for file in ${{ steps.changed-files.outputs.renamed }}
          do
            hosts_renamed="$hosts_renamed $(echo "$file" | cut -d "/" -f1)"
          done
          
          # generate output
          echo "hosts_added=$hosts_added" >> $GITHUB_OUTPUT
          echo "hosts_modified=$hosts_modified" >> $GITHUB_OUTPUT
          echo "hosts_removed=$hosts_removed" >> $GITHUB_OUTPUT
          echo "hosts_renamed=$hosts_renamed" >> $GITHUB_OUTPUT
      
      - name: "set matrix host variables"
        id: matrix-variables
        run: |
          unique_hosts=$(echo "${{ steps.detect-hostfolder.outputs.hosts_added }} ${{ steps.detect-hostfolder.outputs.hosts_modified }} ${{ steps.detect-hostfolder.outputs.hosts_removed }} ${{ steps.detect-hostfolder.outputs.hosts_renamed }}" | tr ' ' '\n' | sort -u)
          for host in $unique_hosts
          do
            unique_hosts_short="$unique_hosts_short $(echo "$host" | cut -d "." -f1)"
          done

          echo "unique_hosts_short=$unique_hosts_short" >> $GITHUB_OUTPUT
          echo "matrix_hosts=$(echo $unique_hosts_short | tr ' ' '\",\"' | tr '-' '_' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

      - run: echo ${{ steps.matrix-variables.outputs.matrix_hosts }}